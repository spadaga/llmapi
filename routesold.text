// src/app/api/analyze/route.js

export async function POST(request) {
    try {
      const { document, question } = await request.json();
      
      // Prepare messages for chat completion
      const messages = [
        {
          role: 'system',
          content: 'You are a helpful assistant that provides direct, concise answers based on the document provided. If calculations are needed, show your work briefly.'
        },
        {
          role: 'user',
          content: `Document: ${document}\n\nQuestion: ${question}`
        }
      ];
  
      // Make API call to OpenRouter using native fetch
      const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${process.env.OPENROUTER_API_KEY || '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'}`,
          'HTTP-Referer': process.env.SITE_URL || 'http://localhost:3000',
          'X-Title': process.env.SITE_NAME || 'Document Analysis App'
        },
        body: JSON.stringify({
         model: 'anthropic/claude-3-haiku',
          messages: messages,
          max_tokens: 300,
          temperature: 0.2,
          top_p: 0.8
        })
      });
  
      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}));
        throw new Error(`API error: ${errorData.error || response.statusText}`);
      }
  
      const data = await response.json();
      const resultText = data.choices?.[0]?.message?.content || 'No response from API';
      
      // Return the cleaned result
      return Response.json({ result: resultText.trim() });
    } catch (error) {
      console.error('API call failed:', error);
      return Response.json({ error: error.message }, { status: 500 });
    }
  }